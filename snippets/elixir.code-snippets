{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"GenServer": {
		"scope": "elixir",
		"prefix": "egs",
		"body": [
			"defmodule ${1:module_name} do",
			"  use GenServer",
			"",
			"  # Public API",
			"  ${0}",
			"  def start_link(args) do",
			"    {opts, state} = Keyword.split(args, [:name])",
			"    GenServer.start_link(__MODULE__, state, opts)",
			"  end",
			"",
			"  # Callbacks",
			"",
			"  @impl true",
			"  def init([]) do",
			"    {:ok, []}",
			"  end",
			"",
			"  @impl true",
			"  def handle_call(:action, _from, [] = state) do",
			"    reply = []",
			"    {:reply, reply, state}",
			"  end",
			"",
			"  @impl true",
			"  def handle_cast(:action, state) do",
			"    {:noreply, state}",
			"  end",
			"end"
		],
		"description": "GenServer"
	}
}